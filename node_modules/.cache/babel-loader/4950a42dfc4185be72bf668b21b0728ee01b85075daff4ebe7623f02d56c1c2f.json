{"ast":null,"code":"import { h as c, openBlock as m, createElementBlock as p, normalizeStyle as z, renderSlot as f } from \"vue\";\nconst M = {\n    name: \"splitpanes\",\n    emits: [\"ready\", \"resize\", \"resized\", \"pane-click\", \"pane-maximize\", \"pane-add\", \"pane-remove\", \"splitter-click\"],\n    props: {\n      horizontal: {\n        type: Boolean\n      },\n      pushOtherPanes: {\n        type: Boolean,\n        default: !0\n      },\n      dblClickSplitter: {\n        type: Boolean,\n        default: !0\n      },\n      rtl: {\n        type: Boolean,\n        default: !1\n      },\n      firstSplitter: {\n        type: Boolean\n      }\n    },\n    provide() {\n      return {\n        requestUpdate: this.requestUpdate,\n        onPaneAdd: this.onPaneAdd,\n        onPaneRemove: this.onPaneRemove,\n        onPaneClick: this.onPaneClick\n      };\n    },\n    data: () => ({\n      container: null,\n      ready: !1,\n      panes: [],\n      touch: {\n        mouseDown: !1,\n        dragging: !1,\n        activeSplitter: null\n      },\n      splitterTaps: {\n        splitter: null,\n        timeoutId: null\n      }\n    }),\n    computed: {\n      panesCount() {\n        return this.panes.length;\n      },\n      indexedPanes() {\n        return this.panes.reduce((e, i) => (e[i.id] = i) && e, {});\n      }\n    },\n    methods: {\n      updatePaneComponents() {\n        this.panes.forEach(e => {\n          e.update && e.update({\n            [this.horizontal ? \"height\" : \"width\"]: `${this.indexedPanes[e.id].size}%`\n          });\n        });\n      },\n      bindEvents() {\n        document.addEventListener(\"mousemove\", this.onMouseMove, {\n          passive: !1\n        }), document.addEventListener(\"mouseup\", this.onMouseUp), \"ontouchstart\" in window && (document.addEventListener(\"touchmove\", this.onMouseMove, {\n          passive: !1\n        }), document.addEventListener(\"touchend\", this.onMouseUp));\n      },\n      unbindEvents() {\n        document.removeEventListener(\"mousemove\", this.onMouseMove, {\n          passive: !1\n        }), document.removeEventListener(\"mouseup\", this.onMouseUp), \"ontouchstart\" in window && (document.removeEventListener(\"touchmove\", this.onMouseMove, {\n          passive: !1\n        }), document.removeEventListener(\"touchend\", this.onMouseUp));\n      },\n      onMouseDown(e, i) {\n        this.bindEvents(), this.touch.mouseDown = !0, this.touch.activeSplitter = i;\n      },\n      onMouseMove(e) {\n        this.touch.mouseDown && (e.preventDefault(), this.touch.dragging = !0, this.calculatePanesSize(this.getCurrentMouseDrag(e)), this.$emit(\"resize\", this.panes.map(i => ({\n          min: i.min,\n          max: i.max,\n          size: i.size\n        }))));\n      },\n      onMouseUp() {\n        this.touch.dragging && this.$emit(\"resized\", this.panes.map(e => ({\n          min: e.min,\n          max: e.max,\n          size: e.size\n        }))), this.touch.mouseDown = !1, setTimeout(() => {\n          this.touch.dragging = !1, this.unbindEvents();\n        }, 100);\n      },\n      onSplitterClick(e, i) {\n        \"ontouchstart\" in window && (e.preventDefault(), this.dblClickSplitter && (this.splitterTaps.splitter === i ? (clearTimeout(this.splitterTaps.timeoutId), this.splitterTaps.timeoutId = null, this.onSplitterDblClick(e, i), this.splitterTaps.splitter = null) : (this.splitterTaps.splitter = i, this.splitterTaps.timeoutId = setTimeout(() => {\n          this.splitterTaps.splitter = null;\n        }, 500)))), this.touch.dragging || this.$emit(\"splitter-click\", this.panes[i]);\n      },\n      onSplitterDblClick(e, i) {\n        let s = 0;\n        this.panes = this.panes.map((n, t) => (n.size = t === i ? n.max : n.min, t !== i && (s += n.min), n)), this.panes[i].size -= s, this.$emit(\"pane-maximize\", this.panes[i]), this.$emit(\"resized\", this.panes.map(n => ({\n          min: n.min,\n          max: n.max,\n          size: n.size\n        })));\n      },\n      onPaneClick(e, i) {\n        this.$emit(\"pane-click\", this.indexedPanes[i]);\n      },\n      getCurrentMouseDrag(e) {\n        const i = this.container.getBoundingClientRect(),\n          {\n            clientX: s,\n            clientY: n\n          } = \"ontouchstart\" in window && e.touches ? e.touches[0] : e;\n        return {\n          x: s - i.left,\n          y: n - i.top\n        };\n      },\n      getCurrentDragPercentage(e) {\n        e = e[this.horizontal ? \"y\" : \"x\"];\n        const i = this.container[this.horizontal ? \"clientHeight\" : \"clientWidth\"];\n        return this.rtl && !this.horizontal && (e = i - e), e * 100 / i;\n      },\n      calculatePanesSize(e) {\n        const i = this.touch.activeSplitter;\n        let s = {\n          prevPanesSize: this.sumPrevPanesSize(i),\n          nextPanesSize: this.sumNextPanesSize(i),\n          prevReachedMinPanes: 0,\n          nextReachedMinPanes: 0\n        };\n        const n = 0 + (this.pushOtherPanes ? 0 : s.prevPanesSize),\n          t = 100 - (this.pushOtherPanes ? 0 : s.nextPanesSize),\n          a = Math.max(Math.min(this.getCurrentDragPercentage(e), t), n);\n        let r = [i, i + 1],\n          o = this.panes[r[0]] || null,\n          h = this.panes[r[1]] || null;\n        const l = o.max < 100 && a >= o.max + s.prevPanesSize,\n          u = h.max < 100 && a <= 100 - (h.max + this.sumNextPanesSize(i + 1));\n        if (l || u) {\n          l ? (o.size = o.max, h.size = Math.max(100 - o.max - s.prevPanesSize - s.nextPanesSize, 0)) : (o.size = Math.max(100 - h.max - s.prevPanesSize - this.sumNextPanesSize(i + 1), 0), h.size = h.max);\n          return;\n        }\n        if (this.pushOtherPanes) {\n          const d = this.doPushOtherPanes(s, a);\n          if (!d) return;\n          ({\n            sums: s,\n            panesToResize: r\n          } = d), o = this.panes[r[0]] || null, h = this.panes[r[1]] || null;\n        }\n        o !== null && (o.size = Math.min(Math.max(a - s.prevPanesSize - s.prevReachedMinPanes, o.min), o.max)), h !== null && (h.size = Math.min(Math.max(100 - a - s.nextPanesSize - s.nextReachedMinPanes, h.min), h.max));\n      },\n      doPushOtherPanes(e, i) {\n        const s = this.touch.activeSplitter,\n          n = [s, s + 1];\n        return i < e.prevPanesSize + this.panes[n[0]].min && (n[0] = this.findPrevExpandedPane(s).index, e.prevReachedMinPanes = 0, n[0] < s && this.panes.forEach((t, a) => {\n          a > n[0] && a <= s && (t.size = t.min, e.prevReachedMinPanes += t.min);\n        }), e.prevPanesSize = this.sumPrevPanesSize(n[0]), n[0] === void 0) ? (e.prevReachedMinPanes = 0, this.panes[0].size = this.panes[0].min, this.panes.forEach((t, a) => {\n          a > 0 && a <= s && (t.size = t.min, e.prevReachedMinPanes += t.min);\n        }), this.panes[n[1]].size = 100 - e.prevReachedMinPanes - this.panes[0].min - e.prevPanesSize - e.nextPanesSize, null) : i > 100 - e.nextPanesSize - this.panes[n[1]].min && (n[1] = this.findNextExpandedPane(s).index, e.nextReachedMinPanes = 0, n[1] > s + 1 && this.panes.forEach((t, a) => {\n          a > s && a < n[1] && (t.size = t.min, e.nextReachedMinPanes += t.min);\n        }), e.nextPanesSize = this.sumNextPanesSize(n[1] - 1), n[1] === void 0) ? (e.nextReachedMinPanes = 0, this.panes[this.panesCount - 1].size = this.panes[this.panesCount - 1].min, this.panes.forEach((t, a) => {\n          a < this.panesCount - 1 && a >= s + 1 && (t.size = t.min, e.nextReachedMinPanes += t.min);\n        }), this.panes[n[0]].size = 100 - e.prevPanesSize - e.nextReachedMinPanes - this.panes[this.panesCount - 1].min - e.nextPanesSize, null) : {\n          sums: e,\n          panesToResize: n\n        };\n      },\n      sumPrevPanesSize(e) {\n        return this.panes.reduce((i, s, n) => i + (n < e ? s.size : 0), 0);\n      },\n      sumNextPanesSize(e) {\n        return this.panes.reduce((i, s, n) => i + (n > e + 1 ? s.size : 0), 0);\n      },\n      findPrevExpandedPane(e) {\n        return [...this.panes].reverse().find(s => s.index < e && s.size > s.min) || {};\n      },\n      findNextExpandedPane(e) {\n        return this.panes.find(s => s.index > e + 1 && s.size > s.min) || {};\n      },\n      checkSplitpanesNodes() {\n        Array.from(this.container.children).forEach(i => {\n          const s = i.classList.contains(\"splitpanes__pane\"),\n            n = i.classList.contains(\"splitpanes__splitter\");\n          !s && !n && (i.parentNode.removeChild(i), console.warn(\"Splitpanes: Only <pane> elements are allowed at the root of <splitpanes>. One of your DOM nodes was removed.\"));\n        });\n      },\n      addSplitter(e, i, s = !1) {\n        const n = e - 1,\n          t = document.createElement(\"div\");\n        t.classList.add(\"splitpanes__splitter\"), s || (t.onmousedown = a => this.onMouseDown(a, n), typeof window < \"u\" && \"ontouchstart\" in window && (t.ontouchstart = a => this.onMouseDown(a, n)), t.onclick = a => this.onSplitterClick(a, n + 1)), this.dblClickSplitter && (t.ondblclick = a => this.onSplitterDblClick(a, n + 1)), i.parentNode.insertBefore(t, i);\n      },\n      removeSplitter(e) {\n        e.onmousedown = void 0, e.onclick = void 0, e.ondblclick = void 0, e.parentNode.removeChild(e);\n      },\n      redoSplitters() {\n        const e = Array.from(this.container.children);\n        e.forEach(s => {\n          s.className.includes(\"splitpanes__splitter\") && this.removeSplitter(s);\n        });\n        let i = 0;\n        e.forEach(s => {\n          s.className.includes(\"splitpanes__pane\") && (!i && this.firstSplitter ? this.addSplitter(i, s, !0) : i && this.addSplitter(i, s), i++);\n        });\n      },\n      requestUpdate({\n        target: e,\n        ...i\n      }) {\n        const s = this.indexedPanes[e._.uid];\n        Object.entries(i).forEach(([n, t]) => s[n] = t);\n      },\n      onPaneAdd(e) {\n        let i = -1;\n        Array.from(e.$el.parentNode.children).some(t => (t.className.includes(\"splitpanes__pane\") && i++, t === e.$el));\n        const s = parseFloat(e.minSize),\n          n = parseFloat(e.maxSize);\n        this.panes.splice(i, 0, {\n          id: e._.uid,\n          index: i,\n          min: isNaN(s) ? 0 : s,\n          max: isNaN(n) ? 100 : n,\n          size: e.size === null ? null : parseFloat(e.size),\n          givenSize: e.size,\n          update: e.update\n        }), this.panes.forEach((t, a) => t.index = a), this.ready && this.$nextTick(() => {\n          this.redoSplitters(), this.resetPaneSizes({\n            addedPane: this.panes[i]\n          }), this.$emit(\"pane-add\", {\n            index: i,\n            panes: this.panes.map(t => ({\n              min: t.min,\n              max: t.max,\n              size: t.size\n            }))\n          });\n        });\n      },\n      onPaneRemove(e) {\n        const i = this.panes.findIndex(n => n.id === e._.uid),\n          s = this.panes.splice(i, 1)[0];\n        this.panes.forEach((n, t) => n.index = t), this.$nextTick(() => {\n          this.redoSplitters(), this.resetPaneSizes({\n            removedPane: {\n              ...s,\n              index: i\n            }\n          }), this.$emit(\"pane-remove\", {\n            removed: s,\n            panes: this.panes.map(n => ({\n              min: n.min,\n              max: n.max,\n              size: n.size\n            }))\n          });\n        });\n      },\n      resetPaneSizes(e = {}) {\n        !e.addedPane && !e.removedPane ? this.initialPanesSizing() : this.panes.some(i => i.givenSize !== null || i.min || i.max < 100) ? this.equalizeAfterAddOrRemove(e) : this.equalize(), this.ready && this.$emit(\"resized\", this.panes.map(i => ({\n          min: i.min,\n          max: i.max,\n          size: i.size\n        })));\n      },\n      equalize() {\n        const e = 100 / this.panesCount;\n        let i = 0;\n        const s = [],\n          n = [];\n        this.panes.forEach(t => {\n          t.size = Math.max(Math.min(e, t.max), t.min), i -= t.size, t.size >= t.max && s.push(t.id), t.size <= t.min && n.push(t.id);\n        }), i > 0.1 && this.readjustSizes(i, s, n);\n      },\n      initialPanesSizing() {\n        let e = 100;\n        const i = [],\n          s = [];\n        let n = 0;\n        this.panes.forEach(a => {\n          e -= a.size, a.size !== null && n++, a.size >= a.max && i.push(a.id), a.size <= a.min && s.push(a.id);\n        });\n        let t = 100;\n        e > 0.1 && (this.panes.forEach(a => {\n          a.size === null && (a.size = Math.max(Math.min(e / (this.panesCount - n), a.max), a.min)), t -= a.size;\n        }), t > 0.1 && this.readjustSizes(e, i, s));\n      },\n      equalizeAfterAddOrRemove({\n        addedPane: e,\n        removedPane: i\n      } = {}) {\n        let s = 100 / this.panesCount,\n          n = 0;\n        const t = [],\n          a = [];\n        e && e.givenSize !== null && (s = (100 - e.givenSize) / (this.panesCount - 1)), this.panes.forEach(r => {\n          n -= r.size, r.size >= r.max && t.push(r.id), r.size <= r.min && a.push(r.id);\n        }), !(Math.abs(n) < 0.1) && (this.panes.forEach(r => {\n          e && e.givenSize !== null && e.id === r.id || (r.size = Math.max(Math.min(s, r.max), r.min)), n -= r.size, r.size >= r.max && t.push(r.id), r.size <= r.min && a.push(r.id);\n        }), n > 0.1 && this.readjustSizes(n, t, a));\n      },\n      readjustSizes(e, i, s) {\n        let n;\n        e > 0 ? n = e / (this.panesCount - i.length) : n = e / (this.panesCount - s.length), this.panes.forEach((t, a) => {\n          if (e > 0 && !i.includes(t.id)) {\n            const r = Math.max(Math.min(t.size + n, t.max), t.min),\n              o = r - t.size;\n            e -= o, t.size = r;\n          } else if (!s.includes(t.id)) {\n            const r = Math.max(Math.min(t.size + n, t.max), t.min),\n              o = r - t.size;\n            e -= o, t.size = r;\n          }\n          t.update({\n            [this.horizontal ? \"height\" : \"width\"]: `${this.indexedPanes[t.id].size}%`\n          });\n        }), Math.abs(e) > 0.1 && this.$nextTick(() => {\n          this.ready && console.warn(\"Splitpanes: Could not resize panes correctly due to their constraints.\");\n        });\n      }\n    },\n    watch: {\n      panes: {\n        deep: !0,\n        immediate: !1,\n        handler() {\n          this.updatePaneComponents();\n        }\n      },\n      horizontal() {\n        this.updatePaneComponents();\n      },\n      firstSplitter() {\n        this.redoSplitters();\n      },\n      dblClickSplitter(e) {\n        [...this.container.querySelectorAll(\".splitpanes__splitter\")].forEach((s, n) => {\n          s.ondblclick = e ? t => this.onSplitterDblClick(t, n) : void 0;\n        });\n      }\n    },\n    beforeUnmount() {\n      this.ready = !1;\n    },\n    mounted() {\n      this.container = this.$refs.container, this.checkSplitpanesNodes(), this.redoSplitters(), this.resetPaneSizes(), this.$emit(\"ready\"), this.ready = !0;\n    },\n    render() {\n      return c(\"div\", {\n        ref: \"container\",\n        class: [\"splitpanes\", `splitpanes--${this.horizontal ? \"horizontal\" : \"vertical\"}`, {\n          \"splitpanes--dragging\": this.touch.dragging\n        }]\n      }, this.$slots.default());\n    }\n  },\n  S = (e, i) => {\n    const s = e.__vccOpts || e;\n    for (const [n, t] of i) s[n] = t;\n    return s;\n  },\n  x = {\n    name: \"pane\",\n    inject: [\"requestUpdate\", \"onPaneAdd\", \"onPaneRemove\", \"onPaneClick\"],\n    props: {\n      size: {\n        type: [Number, String],\n        default: null\n      },\n      minSize: {\n        type: [Number, String],\n        default: 0\n      },\n      maxSize: {\n        type: [Number, String],\n        default: 100\n      }\n    },\n    data: () => ({\n      style: {}\n    }),\n    mounted() {\n      this.onPaneAdd(this);\n    },\n    beforeUnmount() {\n      this.onPaneRemove(this);\n    },\n    methods: {\n      update(e) {\n        this.style = e;\n      }\n    },\n    computed: {\n      sizeNumber() {\n        return this.size || this.size === 0 ? parseFloat(this.size) : null;\n      },\n      minSizeNumber() {\n        return parseFloat(this.minSize);\n      },\n      maxSizeNumber() {\n        return parseFloat(this.maxSize);\n      }\n    },\n    watch: {\n      sizeNumber(e) {\n        this.requestUpdate({\n          target: this,\n          size: e\n        });\n      },\n      minSizeNumber(e) {\n        this.requestUpdate({\n          target: this,\n          min: e\n        });\n      },\n      maxSizeNumber(e) {\n        this.requestUpdate({\n          target: this,\n          max: e\n        });\n      }\n    }\n  };\nfunction P(e, i, s, n, t, a) {\n  return m(), p(\"div\", {\n    class: \"splitpanes__pane\",\n    onClick: i[0] || (i[0] = r => a.onPaneClick(r, e._.uid)),\n    style: z(e.style)\n  }, [f(e.$slots, \"default\")], 4);\n}\nconst g = /* @__PURE__ */S(x, [[\"render\", P]]);\nexport { g as Pane, M as Splitpanes };","map":{"version":3,"names":["h","c","openBlock","m","createElementBlock","p","normalizeStyle","z","renderSlot","f","M","name","emits","props","horizontal","type","Boolean","pushOtherPanes","default","dblClickSplitter","rtl","firstSplitter","provide","requestUpdate","onPaneAdd","onPaneRemove","onPaneClick","data","container","ready","panes","touch","mouseDown","dragging","activeSplitter","splitterTaps","splitter","timeoutId","computed","panesCount","length","indexedPanes","reduce","e","i","id","methods","updatePaneComponents","forEach","update","size","bindEvents","document","addEventListener","onMouseMove","passive","onMouseUp","window","unbindEvents","removeEventListener","onMouseDown","preventDefault","calculatePanesSize","getCurrentMouseDrag","$emit","map","min","max","setTimeout","onSplitterClick","clearTimeout","onSplitterDblClick","s","n","t","getBoundingClientRect","clientX","clientY","touches","x","left","y","top","getCurrentDragPercentage","prevPanesSize","sumPrevPanesSize","nextPanesSize","sumNextPanesSize","prevReachedMinPanes","nextReachedMinPanes","a","Math","r","o","l","u","d","doPushOtherPanes","sums","panesToResize","findPrevExpandedPane","index","findNextExpandedPane","reverse","find","checkSplitpanesNodes","Array","from","children","classList","contains","parentNode","removeChild","console","warn","addSplitter","createElement","add","onmousedown","ontouchstart","onclick","ondblclick","insertBefore","removeSplitter","redoSplitters","className","includes","target","_","uid","Object","entries","$el","some","parseFloat","minSize","maxSize","splice","isNaN","givenSize","$nextTick","resetPaneSizes","addedPane","findIndex","removedPane","removed","initialPanesSizing","equalizeAfterAddOrRemove","equalize","push","readjustSizes","abs","watch","deep","immediate","handler","querySelectorAll","beforeUnmount","mounted","$refs","render","ref","class","$slots","S","__vccOpts","inject","Number","String","style","sizeNumber","minSizeNumber","maxSizeNumber","P","onClick","g","Pane","Splitpanes"],"sources":["C:/Users/VARSHITHA/Documents/web development/coditor/node_modules/splitpanes/dist/splitpanes.es.js"],"sourcesContent":["import { h as c, openBlock as m, createElementBlock as p, normalizeStyle as z, renderSlot as f } from \"vue\";\nconst M = {\n  name: \"splitpanes\",\n  emits: [\"ready\", \"resize\", \"resized\", \"pane-click\", \"pane-maximize\", \"pane-add\", \"pane-remove\", \"splitter-click\"],\n  props: {\n    horizontal: { type: Boolean },\n    pushOtherPanes: { type: Boolean, default: !0 },\n    dblClickSplitter: { type: Boolean, default: !0 },\n    rtl: { type: Boolean, default: !1 },\n    firstSplitter: { type: Boolean }\n  },\n  provide() {\n    return {\n      requestUpdate: this.requestUpdate,\n      onPaneAdd: this.onPaneAdd,\n      onPaneRemove: this.onPaneRemove,\n      onPaneClick: this.onPaneClick\n    };\n  },\n  data: () => ({\n    container: null,\n    ready: !1,\n    panes: [],\n    touch: {\n      mouseDown: !1,\n      dragging: !1,\n      activeSplitter: null\n    },\n    splitterTaps: {\n      splitter: null,\n      timeoutId: null\n    }\n  }),\n  computed: {\n    panesCount() {\n      return this.panes.length;\n    },\n    indexedPanes() {\n      return this.panes.reduce((e, i) => (e[i.id] = i) && e, {});\n    }\n  },\n  methods: {\n    updatePaneComponents() {\n      this.panes.forEach((e) => {\n        e.update && e.update({\n          [this.horizontal ? \"height\" : \"width\"]: `${this.indexedPanes[e.id].size}%`\n        });\n      });\n    },\n    bindEvents() {\n      document.addEventListener(\"mousemove\", this.onMouseMove, { passive: !1 }), document.addEventListener(\"mouseup\", this.onMouseUp), \"ontouchstart\" in window && (document.addEventListener(\"touchmove\", this.onMouseMove, { passive: !1 }), document.addEventListener(\"touchend\", this.onMouseUp));\n    },\n    unbindEvents() {\n      document.removeEventListener(\"mousemove\", this.onMouseMove, { passive: !1 }), document.removeEventListener(\"mouseup\", this.onMouseUp), \"ontouchstart\" in window && (document.removeEventListener(\"touchmove\", this.onMouseMove, { passive: !1 }), document.removeEventListener(\"touchend\", this.onMouseUp));\n    },\n    onMouseDown(e, i) {\n      this.bindEvents(), this.touch.mouseDown = !0, this.touch.activeSplitter = i;\n    },\n    onMouseMove(e) {\n      this.touch.mouseDown && (e.preventDefault(), this.touch.dragging = !0, this.calculatePanesSize(this.getCurrentMouseDrag(e)), this.$emit(\"resize\", this.panes.map((i) => ({ min: i.min, max: i.max, size: i.size }))));\n    },\n    onMouseUp() {\n      this.touch.dragging && this.$emit(\"resized\", this.panes.map((e) => ({ min: e.min, max: e.max, size: e.size }))), this.touch.mouseDown = !1, setTimeout(() => {\n        this.touch.dragging = !1, this.unbindEvents();\n      }, 100);\n    },\n    onSplitterClick(e, i) {\n      \"ontouchstart\" in window && (e.preventDefault(), this.dblClickSplitter && (this.splitterTaps.splitter === i ? (clearTimeout(this.splitterTaps.timeoutId), this.splitterTaps.timeoutId = null, this.onSplitterDblClick(e, i), this.splitterTaps.splitter = null) : (this.splitterTaps.splitter = i, this.splitterTaps.timeoutId = setTimeout(() => {\n        this.splitterTaps.splitter = null;\n      }, 500)))), this.touch.dragging || this.$emit(\"splitter-click\", this.panes[i]);\n    },\n    onSplitterDblClick(e, i) {\n      let s = 0;\n      this.panes = this.panes.map((n, t) => (n.size = t === i ? n.max : n.min, t !== i && (s += n.min), n)), this.panes[i].size -= s, this.$emit(\"pane-maximize\", this.panes[i]), this.$emit(\"resized\", this.panes.map((n) => ({ min: n.min, max: n.max, size: n.size })));\n    },\n    onPaneClick(e, i) {\n      this.$emit(\"pane-click\", this.indexedPanes[i]);\n    },\n    getCurrentMouseDrag(e) {\n      const i = this.container.getBoundingClientRect(), { clientX: s, clientY: n } = \"ontouchstart\" in window && e.touches ? e.touches[0] : e;\n      return {\n        x: s - i.left,\n        y: n - i.top\n      };\n    },\n    getCurrentDragPercentage(e) {\n      e = e[this.horizontal ? \"y\" : \"x\"];\n      const i = this.container[this.horizontal ? \"clientHeight\" : \"clientWidth\"];\n      return this.rtl && !this.horizontal && (e = i - e), e * 100 / i;\n    },\n    calculatePanesSize(e) {\n      const i = this.touch.activeSplitter;\n      let s = {\n        prevPanesSize: this.sumPrevPanesSize(i),\n        nextPanesSize: this.sumNextPanesSize(i),\n        prevReachedMinPanes: 0,\n        nextReachedMinPanes: 0\n      };\n      const n = 0 + (this.pushOtherPanes ? 0 : s.prevPanesSize), t = 100 - (this.pushOtherPanes ? 0 : s.nextPanesSize), a = Math.max(Math.min(this.getCurrentDragPercentage(e), t), n);\n      let r = [i, i + 1], o = this.panes[r[0]] || null, h = this.panes[r[1]] || null;\n      const l = o.max < 100 && a >= o.max + s.prevPanesSize, u = h.max < 100 && a <= 100 - (h.max + this.sumNextPanesSize(i + 1));\n      if (l || u) {\n        l ? (o.size = o.max, h.size = Math.max(100 - o.max - s.prevPanesSize - s.nextPanesSize, 0)) : (o.size = Math.max(100 - h.max - s.prevPanesSize - this.sumNextPanesSize(i + 1), 0), h.size = h.max);\n        return;\n      }\n      if (this.pushOtherPanes) {\n        const d = this.doPushOtherPanes(s, a);\n        if (!d)\n          return;\n        ({ sums: s, panesToResize: r } = d), o = this.panes[r[0]] || null, h = this.panes[r[1]] || null;\n      }\n      o !== null && (o.size = Math.min(Math.max(a - s.prevPanesSize - s.prevReachedMinPanes, o.min), o.max)), h !== null && (h.size = Math.min(Math.max(100 - a - s.nextPanesSize - s.nextReachedMinPanes, h.min), h.max));\n    },\n    doPushOtherPanes(e, i) {\n      const s = this.touch.activeSplitter, n = [s, s + 1];\n      return i < e.prevPanesSize + this.panes[n[0]].min && (n[0] = this.findPrevExpandedPane(s).index, e.prevReachedMinPanes = 0, n[0] < s && this.panes.forEach((t, a) => {\n        a > n[0] && a <= s && (t.size = t.min, e.prevReachedMinPanes += t.min);\n      }), e.prevPanesSize = this.sumPrevPanesSize(n[0]), n[0] === void 0) ? (e.prevReachedMinPanes = 0, this.panes[0].size = this.panes[0].min, this.panes.forEach((t, a) => {\n        a > 0 && a <= s && (t.size = t.min, e.prevReachedMinPanes += t.min);\n      }), this.panes[n[1]].size = 100 - e.prevReachedMinPanes - this.panes[0].min - e.prevPanesSize - e.nextPanesSize, null) : i > 100 - e.nextPanesSize - this.panes[n[1]].min && (n[1] = this.findNextExpandedPane(s).index, e.nextReachedMinPanes = 0, n[1] > s + 1 && this.panes.forEach((t, a) => {\n        a > s && a < n[1] && (t.size = t.min, e.nextReachedMinPanes += t.min);\n      }), e.nextPanesSize = this.sumNextPanesSize(n[1] - 1), n[1] === void 0) ? (e.nextReachedMinPanes = 0, this.panes[this.panesCount - 1].size = this.panes[this.panesCount - 1].min, this.panes.forEach((t, a) => {\n        a < this.panesCount - 1 && a >= s + 1 && (t.size = t.min, e.nextReachedMinPanes += t.min);\n      }), this.panes[n[0]].size = 100 - e.prevPanesSize - e.nextReachedMinPanes - this.panes[this.panesCount - 1].min - e.nextPanesSize, null) : { sums: e, panesToResize: n };\n    },\n    sumPrevPanesSize(e) {\n      return this.panes.reduce((i, s, n) => i + (n < e ? s.size : 0), 0);\n    },\n    sumNextPanesSize(e) {\n      return this.panes.reduce((i, s, n) => i + (n > e + 1 ? s.size : 0), 0);\n    },\n    findPrevExpandedPane(e) {\n      return [...this.panes].reverse().find((s) => s.index < e && s.size > s.min) || {};\n    },\n    findNextExpandedPane(e) {\n      return this.panes.find((s) => s.index > e + 1 && s.size > s.min) || {};\n    },\n    checkSplitpanesNodes() {\n      Array.from(this.container.children).forEach((i) => {\n        const s = i.classList.contains(\"splitpanes__pane\"), n = i.classList.contains(\"splitpanes__splitter\");\n        !s && !n && (i.parentNode.removeChild(i), console.warn(\"Splitpanes: Only <pane> elements are allowed at the root of <splitpanes>. One of your DOM nodes was removed.\"));\n      });\n    },\n    addSplitter(e, i, s = !1) {\n      const n = e - 1, t = document.createElement(\"div\");\n      t.classList.add(\"splitpanes__splitter\"), s || (t.onmousedown = (a) => this.onMouseDown(a, n), typeof window < \"u\" && \"ontouchstart\" in window && (t.ontouchstart = (a) => this.onMouseDown(a, n)), t.onclick = (a) => this.onSplitterClick(a, n + 1)), this.dblClickSplitter && (t.ondblclick = (a) => this.onSplitterDblClick(a, n + 1)), i.parentNode.insertBefore(t, i);\n    },\n    removeSplitter(e) {\n      e.onmousedown = void 0, e.onclick = void 0, e.ondblclick = void 0, e.parentNode.removeChild(e);\n    },\n    redoSplitters() {\n      const e = Array.from(this.container.children);\n      e.forEach((s) => {\n        s.className.includes(\"splitpanes__splitter\") && this.removeSplitter(s);\n      });\n      let i = 0;\n      e.forEach((s) => {\n        s.className.includes(\"splitpanes__pane\") && (!i && this.firstSplitter ? this.addSplitter(i, s, !0) : i && this.addSplitter(i, s), i++);\n      });\n    },\n    requestUpdate({ target: e, ...i }) {\n      const s = this.indexedPanes[e._.uid];\n      Object.entries(i).forEach(([n, t]) => s[n] = t);\n    },\n    onPaneAdd(e) {\n      let i = -1;\n      Array.from(e.$el.parentNode.children).some((t) => (t.className.includes(\"splitpanes__pane\") && i++, t === e.$el));\n      const s = parseFloat(e.minSize), n = parseFloat(e.maxSize);\n      this.panes.splice(i, 0, {\n        id: e._.uid,\n        index: i,\n        min: isNaN(s) ? 0 : s,\n        max: isNaN(n) ? 100 : n,\n        size: e.size === null ? null : parseFloat(e.size),\n        givenSize: e.size,\n        update: e.update\n      }), this.panes.forEach((t, a) => t.index = a), this.ready && this.$nextTick(() => {\n        this.redoSplitters(), this.resetPaneSizes({ addedPane: this.panes[i] }), this.$emit(\"pane-add\", { index: i, panes: this.panes.map((t) => ({ min: t.min, max: t.max, size: t.size })) });\n      });\n    },\n    onPaneRemove(e) {\n      const i = this.panes.findIndex((n) => n.id === e._.uid), s = this.panes.splice(i, 1)[0];\n      this.panes.forEach((n, t) => n.index = t), this.$nextTick(() => {\n        this.redoSplitters(), this.resetPaneSizes({ removedPane: { ...s, index: i } }), this.$emit(\"pane-remove\", { removed: s, panes: this.panes.map((n) => ({ min: n.min, max: n.max, size: n.size })) });\n      });\n    },\n    resetPaneSizes(e = {}) {\n      !e.addedPane && !e.removedPane ? this.initialPanesSizing() : this.panes.some((i) => i.givenSize !== null || i.min || i.max < 100) ? this.equalizeAfterAddOrRemove(e) : this.equalize(), this.ready && this.$emit(\"resized\", this.panes.map((i) => ({ min: i.min, max: i.max, size: i.size })));\n    },\n    equalize() {\n      const e = 100 / this.panesCount;\n      let i = 0;\n      const s = [], n = [];\n      this.panes.forEach((t) => {\n        t.size = Math.max(Math.min(e, t.max), t.min), i -= t.size, t.size >= t.max && s.push(t.id), t.size <= t.min && n.push(t.id);\n      }), i > 0.1 && this.readjustSizes(i, s, n);\n    },\n    initialPanesSizing() {\n      let e = 100;\n      const i = [], s = [];\n      let n = 0;\n      this.panes.forEach((a) => {\n        e -= a.size, a.size !== null && n++, a.size >= a.max && i.push(a.id), a.size <= a.min && s.push(a.id);\n      });\n      let t = 100;\n      e > 0.1 && (this.panes.forEach((a) => {\n        a.size === null && (a.size = Math.max(Math.min(e / (this.panesCount - n), a.max), a.min)), t -= a.size;\n      }), t > 0.1 && this.readjustSizes(e, i, s));\n    },\n    equalizeAfterAddOrRemove({ addedPane: e, removedPane: i } = {}) {\n      let s = 100 / this.panesCount, n = 0;\n      const t = [], a = [];\n      e && e.givenSize !== null && (s = (100 - e.givenSize) / (this.panesCount - 1)), this.panes.forEach((r) => {\n        n -= r.size, r.size >= r.max && t.push(r.id), r.size <= r.min && a.push(r.id);\n      }), !(Math.abs(n) < 0.1) && (this.panes.forEach((r) => {\n        e && e.givenSize !== null && e.id === r.id || (r.size = Math.max(Math.min(s, r.max), r.min)), n -= r.size, r.size >= r.max && t.push(r.id), r.size <= r.min && a.push(r.id);\n      }), n > 0.1 && this.readjustSizes(n, t, a));\n    },\n    readjustSizes(e, i, s) {\n      let n;\n      e > 0 ? n = e / (this.panesCount - i.length) : n = e / (this.panesCount - s.length), this.panes.forEach((t, a) => {\n        if (e > 0 && !i.includes(t.id)) {\n          const r = Math.max(Math.min(t.size + n, t.max), t.min), o = r - t.size;\n          e -= o, t.size = r;\n        } else if (!s.includes(t.id)) {\n          const r = Math.max(Math.min(t.size + n, t.max), t.min), o = r - t.size;\n          e -= o, t.size = r;\n        }\n        t.update({\n          [this.horizontal ? \"height\" : \"width\"]: `${this.indexedPanes[t.id].size}%`\n        });\n      }), Math.abs(e) > 0.1 && this.$nextTick(() => {\n        this.ready && console.warn(\"Splitpanes: Could not resize panes correctly due to their constraints.\");\n      });\n    }\n  },\n  watch: {\n    panes: {\n      deep: !0,\n      immediate: !1,\n      handler() {\n        this.updatePaneComponents();\n      }\n    },\n    horizontal() {\n      this.updatePaneComponents();\n    },\n    firstSplitter() {\n      this.redoSplitters();\n    },\n    dblClickSplitter(e) {\n      [...this.container.querySelectorAll(\".splitpanes__splitter\")].forEach((s, n) => {\n        s.ondblclick = e ? (t) => this.onSplitterDblClick(t, n) : void 0;\n      });\n    }\n  },\n  beforeUnmount() {\n    this.ready = !1;\n  },\n  mounted() {\n    this.container = this.$refs.container, this.checkSplitpanesNodes(), this.redoSplitters(), this.resetPaneSizes(), this.$emit(\"ready\"), this.ready = !0;\n  },\n  render() {\n    return c(\n      \"div\",\n      {\n        ref: \"container\",\n        class: [\n          \"splitpanes\",\n          `splitpanes--${this.horizontal ? \"horizontal\" : \"vertical\"}`,\n          {\n            \"splitpanes--dragging\": this.touch.dragging\n          }\n        ]\n      },\n      this.$slots.default()\n    );\n  }\n}, S = (e, i) => {\n  const s = e.__vccOpts || e;\n  for (const [n, t] of i)\n    s[n] = t;\n  return s;\n}, x = {\n  name: \"pane\",\n  inject: [\"requestUpdate\", \"onPaneAdd\", \"onPaneRemove\", \"onPaneClick\"],\n  props: {\n    size: { type: [Number, String], default: null },\n    minSize: { type: [Number, String], default: 0 },\n    maxSize: { type: [Number, String], default: 100 }\n  },\n  data: () => ({\n    style: {}\n  }),\n  mounted() {\n    this.onPaneAdd(this);\n  },\n  beforeUnmount() {\n    this.onPaneRemove(this);\n  },\n  methods: {\n    update(e) {\n      this.style = e;\n    }\n  },\n  computed: {\n    sizeNumber() {\n      return this.size || this.size === 0 ? parseFloat(this.size) : null;\n    },\n    minSizeNumber() {\n      return parseFloat(this.minSize);\n    },\n    maxSizeNumber() {\n      return parseFloat(this.maxSize);\n    }\n  },\n  watch: {\n    sizeNumber(e) {\n      this.requestUpdate({ target: this, size: e });\n    },\n    minSizeNumber(e) {\n      this.requestUpdate({ target: this, min: e });\n    },\n    maxSizeNumber(e) {\n      this.requestUpdate({ target: this, max: e });\n    }\n  }\n};\nfunction P(e, i, s, n, t, a) {\n  return m(), p(\"div\", {\n    class: \"splitpanes__pane\",\n    onClick: i[0] || (i[0] = (r) => a.onPaneClick(r, e._.uid)),\n    style: z(e.style)\n  }, [\n    f(e.$slots, \"default\")\n  ], 4);\n}\nconst g = /* @__PURE__ */ S(x, [[\"render\", P]]);\nexport {\n  g as Pane,\n  M as Splitpanes\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}